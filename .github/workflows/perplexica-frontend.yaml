name: Build & Deploy Perplexica Frontend
run-name: Build & Deploy ${{ github.event.inputs.tenant_name }} Frontend
on:
  workflow_dispatch:
    inputs:
      tenant_name:
        description: 'Target DuploCloud tenant'
        required: true
        default: 'dev01'
        type: choice
        options:
          - dev01
          - prod
          - stage
          - ksa-prod
          - ksa-dev01

env:
  DUPLO_HOST: https://sully.duplocloud.net
  DUPLO_TOKEN: ${{ secrets.DUPLO_TOKEN }}
  DUPLO_TENANT: ${{ inputs.tenant_name }}
  SERVICE_NAME: perplexica-frontend
  CLOUD_CREDENTIALS: ${{ secrets.WORKFLOW_SERVICE_ACCOUNT }}
  CLOUD_ACCOUNT: ${{ vars.CLOUD_ACCOUNT }}
  ARTIFACT_REGISTRY: ${{ vars.ARTIFACT_REGISTRY }}
  # NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}
  # NEXT_PUBLIC_WS_URL: ${{ vars.NEXT_PUBLIC_WS_URL }}
  PERPLEXICA_BACKEND_DOMAIN: ${{ vars.PERPLEXICA_BACKEND_DOMAIN }}

jobs:
  build-and-deploy-frontend:
    name: Build and Deploy Frontend Service 
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    environment: ${{ inputs.tenant_name }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Duplo Setup
        uses: duplocloud/actions@main
        with:
          account-id: ${{ env.CLOUD_ACCOUNT }}
          credentials: ${{ env.CLOUD_CREDENTIALS }}

      - name: Authenticate Docker with GCP
        run: gcloud auth configure-docker ${{ env.ARTIFACT_REGISTRY }}

      - name: Build and Push Docker Image
        id: build_image
        uses: duplocloud/actions/build-image@3c4899bad07d3c7b34e46888056fa8d7d28b73fd
        with:
          registry: ${{ env.ARTIFACT_REGISTRY }}/${{ env.CLOUD_ACCOUNT }}/perplexica
          repo: ${{ env.SERVICE_NAME }}
          dockerfile: app.dockerfile
          push: true
          cache: true
          build-args: >
            NEXT_PUBLIC_WS_URL=wss://${{ env.PERPLEXICA_BACKEND_DOMAIN }}
            NEXT_PUBLIC_API_URL=https://${{ env.PERPLEXICA_BACKEND_DOMAIN }}/api

      - name: Update Service in Duplo
        uses: duplocloud/actions/update-image@main
        with:
          type: service
          name: ${{ env.SERVICE_NAME }}
          image: ${{ steps.build_image.outputs.uri }}
